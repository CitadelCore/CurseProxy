//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cursemeta.LoginService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginRequest", Namespace="http://schemas.datacontract.org/2004/07/Curse.ServiceAuthentication.Models")]
    public partial class LoginRequest : object
    {
        
        private string EncryptedPasswordField;
        
        private string PasswordField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EncryptedPassword
        {
            get
            {
                return this.EncryptedPasswordField;
            }
            set
            {
                this.EncryptedPasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username
        {
            get
            {
                return this.UsernameField;
            }
            set
            {
                this.UsernameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginResponse", Namespace="http://schemas.datacontract.org/2004/07/Curse.ServiceAuthentication.Models")]
    public partial class LoginResponse : object
    {
        
        private LoginService.AuthenticationSession SessionField;
        
        private LoginService.AuthenticationStatus StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LoginService.AuthenticationSession Session
        {
            get
            {
                return this.SessionField;
            }
            set
            {
                this.SessionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LoginService.AuthenticationStatus Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationSession", Namespace="http://schemas.datacontract.org/2004/07/Curse.ServiceAuthentication.Models")]
    public partial class AuthenticationSession : object
    {
        
        private bool ActualPremiumStatusField;
        
        private bool EffectivePremiumStatusField;
        
        private string EmailAddressField;
        
        private string SessionIDField;
        
        private int SubscriptionTokenField;
        
        private string TokenField;
        
        private int UserIDField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ActualPremiumStatus
        {
            get
            {
                return this.ActualPremiumStatusField;
            }
            set
            {
                this.ActualPremiumStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EffectivePremiumStatus
        {
            get
            {
                return this.EffectivePremiumStatusField;
            }
            set
            {
                this.EffectivePremiumStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress
        {
            get
            {
                return this.EmailAddressField;
            }
            set
            {
                this.EmailAddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID
        {
            get
            {
                return this.SessionIDField;
            }
            set
            {
                this.SessionIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubscriptionToken
        {
            get
            {
                return this.SubscriptionTokenField;
            }
            set
            {
                this.SubscriptionTokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token
        {
            get
            {
                return this.TokenField;
            }
            set
            {
                this.TokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID
        {
            get
            {
                return this.UserIDField;
            }
            set
            {
                this.UserIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username
        {
            get
            {
                return this.UsernameField;
            }
            set
            {
                this.UsernameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationStatus", Namespace="http://schemas.datacontract.org/2004/07/Curse.ServiceAuthentication.Models")]
    public enum AuthenticationStatus : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unsuccessful = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidSession = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnauthorizedLogin = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidPassword = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknownUsername = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknownEmail = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknownError = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncorrectTime = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CorruptLibrary = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutdatedClient = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubscriptionMismatch = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubscriptionExpired = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InsufficientAccessLevel = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidApiKey = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MissingGrant = 108,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegisterRequest", Namespace="http://schemas.datacontract.org/2004/07/Curse.ServiceAuthentication.Models")]
    public partial class RegisterRequest : object
    {
        
        private string EmailField;
        
        private bool NewsletterOptInField;
        
        private string PasswordField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NewsletterOptIn
        {
            get
            {
                return this.NewsletterOptInField;
            }
            set
            {
                this.NewsletterOptInField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username
        {
            get
            {
                return this.UsernameField;
            }
            set
            {
                this.UsernameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegisterUserResult", Namespace="http://schemas.datacontract.org/2004/07/Curse.ServiceAuthentication.Models")]
    public partial class RegisterUserResult : object
    {
        
        private string SessionIDField;
        
        private LoginService.RegisterUserStatus StatusField;
        
        private int UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID
        {
            get
            {
                return this.SessionIDField;
            }
            set
            {
                this.SessionIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LoginService.RegisterUserStatus Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID
        {
            get
            {
                return this.UserIDField;
            }
            set
            {
                this.UserIDField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegisterUserStatus", Namespace="http://schemas.datacontract.org/2004/07/Curse.ServiceAuthentication.Models")]
    public enum RegisterUserStatus : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Successful = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmailInUse = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UsernameInUse = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InsufficientPermissions = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidProfile = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidUsername = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidNetworkSite = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidPassword = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnknownError = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckUsernameAvailabilityRequest", Namespace="http://schemas.datacontract.org/2004/07/Curse.ServiceAuthentication.Models")]
    public partial class CheckUsernameAvailabilityRequest : object
    {
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username
        {
            get
            {
                return this.UsernameField;
            }
            set
            {
                this.UsernameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://clientservice.curse.com/", ConfigurationName="LoginService.IClientLoginService")]
    public interface IClientLoginService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://clientservice.curse.com/IClientLoginService/Login", ReplyAction="http://clientservice.curse.com/IClientLoginService/LoginResponse")]
        System.Threading.Tasks.Task<LoginService.LoginResponse> LoginAsync(LoginService.LoginRequest loginRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://clientservice.curse.com/IClientLoginService/Register", ReplyAction="http://clientservice.curse.com/IClientLoginService/RegisterResponse")]
        System.Threading.Tasks.Task<LoginService.RegisterUserResult> RegisterAsync(LoginService.RegisterRequest registerRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://clientservice.curse.com/IClientLoginService/CheckUsernameAvailability", ReplyAction="http://clientservice.curse.com/IClientLoginService/CheckUsernameAvailabilityRespo" +
            "nse")]
        System.Threading.Tasks.Task<bool> CheckUsernameAvailabilityAsync(LoginService.CheckUsernameAvailabilityRequest username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public interface IClientLoginServiceChannel : LoginService.IClientLoginService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public partial class ClientLoginServiceClient : System.ServiceModel.ClientBase<LoginService.IClientLoginService>, LoginService.IClientLoginService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ClientLoginServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ClientLoginServiceClient.GetBindingForEndpoint(endpointConfiguration), ClientLoginServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ClientLoginServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ClientLoginServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ClientLoginServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ClientLoginServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ClientLoginServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<LoginService.LoginResponse> LoginAsync(LoginService.LoginRequest loginRequest)
        {
            return base.Channel.LoginAsync(loginRequest);
        }
        
        public System.Threading.Tasks.Task<LoginService.RegisterUserResult> RegisterAsync(LoginService.RegisterRequest registerRequest)
        {
            return base.Channel.RegisterAsync(registerRequest);
        }
        
        public System.Threading.Tasks.Task<bool> CheckUsernameAvailabilityAsync(LoginService.CheckUsernameAvailabilityRequest username)
        {
            return base.Channel.CheckUsernameAvailabilityAsync(username);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BinaryHttpClientLoginServiceEndpoint))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                result.Elements.Add(new System.ServiceModel.Channels.BinaryMessageEncodingBindingElement());
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.BinaryHttpsClientLoginServiceEndpoint))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                result.Elements.Add(new System.ServiceModel.Channels.BinaryMessageEncodingBindingElement());
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BinaryHttpClientLoginServiceEndpoint))
            {
                return new System.ServiceModel.EndpointAddress("http://clientservice-v6-beta.curse.com/ClientLoginService.svc/Binary");
            }
            if ((endpointConfiguration == EndpointConfiguration.BinaryHttpsClientLoginServiceEndpoint))
            {
                return new System.ServiceModel.EndpointAddress("https://clientservice-v6-beta.curse.com/ClientLoginService.svc/Binary");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            BinaryHttpClientLoginServiceEndpoint,
            
            BinaryHttpsClientLoginServiceEndpoint,
        }
    }
}
